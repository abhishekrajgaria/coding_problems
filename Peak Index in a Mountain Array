https://leetcode.com/problems/peak-index-in-a-mountain-array/


## First Approach
class Solution {
public:
    int peakIndexInMountainArray(vector<int>& arr) {
        int n = arr.size();
        int l = 0;
        int r = n-1;
        while(l<=r){
            int mid = (r-l)/2 + l;
            if(mid==n-1 and arr[mid]>arr[mid-1]){
                return mid;
            }
            if(mid==0 and arr[mid]>arr[mid+1]){
                return mid;
            }
            if(arr[mid]>arr[mid+1] and arr[mid]>arr[mid-1]){
                return mid;
            }
            else if(arr[mid]>arr[mid+1]){
                r = mid-1;
            }
            else{
                l = mid+1;
            }
        }
        return -1;
    }
};

## Second Approach

class Solution {
public:
    int peakIndexInMountainArray(vector<int>& arr) {
        int n = arr.size();
        int ans = -1;
        int l = 0;
        int r = n-1;
        int mid = (r-l)/2 + l;
        while(l<r){
            if(arr[mid]<arr[mid+1]){
                l = mid+1;
            }
            else{
                r = mid;
            }
            mid = (r-l)/2 + l;
        }
        return l;
    }
};