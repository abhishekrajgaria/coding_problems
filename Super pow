https://leetcode.com/problems/super-pow

class Solution {
public:
    int superPow(int a, vector<int>& b) {
        int b_mod = 0;
        int m = 1337;
        // Euler Totient
        int n = 1337;
        int phi = n;
        for(int i=2;i*i<=n;i++){
            if(n%i==0){
                while(n%i==0){
                    n = n/i;
                }
                phi -= phi/i;
            }
        }
        cout<<n<<endl;
        if(n>1){
            phi-=phi/n;
        }
        // updating pow as b mod (phi)
        cout<<phi<<endl;
        for(int i=0;i<b.size();i++){
            b_mod = (b_mod*10 + (b[i]))%(phi);
        }
        cout<<b_mod<<endl;
        // binary exponentiation
        int ans = 1;
        while(b_mod>0){
            ans = (b_mod&1) ? (ans * a%m)%m : ans;
            a = (a%m * (a%m))%m;
            b_mod>>=1;
        }
        return ans;
    }
};