https://leetcode.com/problems/search-in-rotated-sorted-array/

class Solution {
public:
    int search(vector<int>& nums, int target) {
        int n = nums.size();
        int l = 0;
        int r = n-1;
        int mid = (r-l)/2 + l;
        while(l<r){
            if(nums[mid] >= nums[r]){
                l = mid+1;
            }
            else{
                r = mid;
            }
            mid =  (r-l)/2 +l;
        }
        int rot = l;
        cout<<rot<<endl;
        l = 0;
        r = n-1;
        while(l<=r){
            mid = (r-l)/2 +l;
            int rmid = (mid+rot)%n;
            if(nums[rmid]==target){
                return rmid;
            }
            else if(nums[rmid]>target){
                r = mid-1;
            }
            else{
                l = mid+1;
            }
        }
        return -1;
    }
};